<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fruit.dao.mysql.OrderMapper">
  <resultMap id="BaseResultMap" type="com.fruit.model.Order">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_pay" jdbcType="BIGINT" property="orderPay" />
    <result column="order_ought_pay" jdbcType="BIGINT" property="orderOughtPay" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, customer_id, create_time, order_pay, order_ought_pay, status, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fruit.model.Order">
    insert into order (order_id, customer_id, create_time, 
      order_pay, order_ought_pay, status, 
      remark)
    values (#{orderId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{orderPay,jdbcType=BIGINT}, #{orderOughtPay,jdbcType=BIGINT}, #{status,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fruit.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderPay != null">
        order_pay,
      </if>
      <if test="orderOughtPay != null">
        order_ought_pay,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPay != null">
        #{orderPay,jdbcType=BIGINT},
      </if>
      <if test="orderOughtPay != null">
        #{orderOughtPay,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fruit.model.Order">
    update order
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPay != null">
        order_pay = #{orderPay,jdbcType=BIGINT},
      </if>
      <if test="orderOughtPay != null">
        order_ought_pay = #{orderOughtPay,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fruit.model.Order">
    update order
    set customer_id = #{customerId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_pay = #{orderPay,jdbcType=BIGINT},
      order_ought_pay = #{orderOughtPay,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.fruit.model.Order">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_pay" jdbcType="BIGINT" property="orderPay" />
    <result column="order_ought_pay" jdbcType="BIGINT" property="orderOughtPay" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, customer_id, create_time, order_pay, order_ought_pay, status, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fruit.model.Order">
    insert into order (order_id, customer_id, create_time, 
      order_pay, order_ought_pay, status, 
      remark)
    values (#{orderId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{orderPay,jdbcType=BIGINT}, #{orderOughtPay,jdbcType=BIGINT}, #{status,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fruit.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderPay != null">
        order_pay,
      </if>
      <if test="orderOughtPay != null">
        order_ought_pay,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPay != null">
        #{orderPay,jdbcType=BIGINT},
      </if>
      <if test="orderOughtPay != null">
        #{orderOughtPay,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fruit.model.Order">
    update order
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPay != null">
        order_pay = #{orderPay,jdbcType=BIGINT},
      </if>
      <if test="orderOughtPay != null">
        order_ought_pay = #{orderOughtPay,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fruit.model.Order">
    update order
    set customer_id = #{customerId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_pay = #{orderPay,jdbcType=BIGINT},
      order_ought_pay = #{orderOughtPay,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>