<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scrum.dao.mysql.SprintTaskMapper" >
  <resultMap id="BaseResultMap" type="com.scrum.model.SprintTask" >
    <id column="task_id" property="taskId" jdbcType="BIGINT" />
    <result column="task_no" property="taskNo" jdbcType="CHAR" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="sprint_id" property="sprintId" jdbcType="BIGINT" />
    <result column="elapsed_time" property="elapsedTime" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    task_id, task_no, task_name, sprint_id, elapsed_time, create_time, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sprint_task
    where task_id = #{taskId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sprint_task
    where task_id = #{taskId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.scrum.model.SprintTask" >
    insert into sprint_task (task_id, task_no, task_name, 
      sprint_id, elapsed_time, create_time, 
      remark)
    values (#{taskId,jdbcType=BIGINT}, #{taskNo,jdbcType=CHAR}, #{taskName,jdbcType=VARCHAR}, 
      #{sprintId,jdbcType=BIGINT}, #{elapsedTime,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.scrum.model.SprintTask" >
    insert into sprint_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="taskNo != null" >
        task_no,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="sprintId != null" >
        sprint_id,
      </if>
      <if test="elapsedTime != null" >
        elapsed_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="taskNo != null" >
        #{taskNo,jdbcType=CHAR},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="sprintId != null" >
        #{sprintId,jdbcType=BIGINT},
      </if>
      <if test="elapsedTime != null" >
        #{elapsedTime,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.scrum.model.SprintTask" >
    update sprint_task
    <set >
      <if test="taskNo != null" >
        task_no = #{taskNo,jdbcType=CHAR},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="sprintId != null" >
        sprint_id = #{sprintId,jdbcType=BIGINT},
      </if>
      <if test="elapsedTime != null" >
        elapsed_time = #{elapsedTime,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scrum.model.SprintTask" >
    update sprint_task
    set task_no = #{taskNo,jdbcType=CHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      sprint_id = #{sprintId,jdbcType=BIGINT},
      elapsed_time = #{elapsedTime,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
</mapper>