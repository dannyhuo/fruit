<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- ###############################数据源配置 Start################################################# -->
	<!-- mysql库数据源配置  -->
	<bean id="dataSource_fruit_mysql" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName">
		   <value>${fruit.mysql.driverClassName}</value>
		</property>
		<property name="url">
		   <value>${fruit.mysql.url}</value>
		</property>
		<property name="username">
		   <value>${fruit.mysql.username}</value>
		</property>
		<property name="password">
		   <value>${fruit.mysql.password}</value>
		</property>
		<property name="maxActive">
		   <value>${fruit.mysql.maxActive}</value>
		</property>
		 <property name="maxWait">
		   <value>${fruit.mysql.maxWait}</value>
		</property>
		 <property name="maxIdle">
		   <value>${fruit.mysql.maxIdle}</value>
		</property>
		<property name="initialSize">
		   <value>${fruit.mysql.initSize}</value>
	    </property>
		<property name="validationQuery">
		   <value>SELECT 1 FROM DUAL</value>
		</property> 
		<property name="filters" value="stat" /> 
	</bean>
	
	
	<!-- oracle库数据源配置  -->
	<bean id="dataSource_fruit_oracle" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName">
		   <value>${fruit.oracle.driverClassName}</value>
		</property>
		<property name="url">
		   <value>${fruit.oracle.url}</value>
		</property>
		<property name="username">
		   <value>${fruit.oracle.username}</value>
		</property>
		<property name="password">
		   <value>${fruit.oracle.password}</value>
		</property>
		<property name="maxActive">
		   <value>${fruit.oracle.maxActive}</value>
		</property>
		 <property name="maxWait">
		   <value>${fruit.oracle.maxWait}</value>
		</property>
		 <property name="maxIdle">
		   <value>${fruit.oracle.maxIdle}</value>
		</property>
		<property name="initialSize">
		   <value>${fruit.oracle.initSize}</value>
	    </property>
		<property name="validationQuery">
		   <value>SELECT 1 FROM DUAL</value>
		</property> 
		<property name="filters" value="stat" /> 
	</bean>
    
    
    <!-- mysql库数据源配置  -->
	<bean id="dataSource_fruit_emall" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName">
		   <value>${fruit.local.mysql.driverClassName}</value>
		</property>
		<property name="url">
		   <value>${fruit.local.mysql.url}</value>
		</property>
		<property name="username">
		   <value>${fruit.local.mysql.username}</value>
		</property>
		<property name="password">
		   <value>${fruit.local.mysql.password}</value>
		</property>
		<property name="maxActive">
		   <value>${fruit.local.mysql.maxActive}</value>
		</property>
		 <property name="maxWait">
		   <value>${fruit.local.mysql.maxWait}</value>
		</property>
		 <property name="maxIdle">
		   <value>${fruit.local.mysql.maxIdle}</value>
		</property>
		<property name="initialSize">
		   <value>${fruit.local.mysql.initSize}</value>
	    </property>
		<property name="validationQuery">
		   <value>SELECT 1 FROM DUAL</value>
		</property> 
		<property name="filters" value="stat" /> 
	</bean>
    <!-- ###############################数据源配置 End################################################# -->
    
    
    
    <!-- ###############################MySQL数据源的相关orm框架配置 Start################################################# -->
    
    <!-- mysql数据源的sqlSessionFactory配置 -->
    <bean id="sqlSessionFactory_mysql" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_fruit_mysql" />
		<property name="configLocation">
		    <value>classpath:mybatis/sqlmap-config.xml</value>		
		</property>
		<property name="mapperLocations"> 
			<value>classpath:mybatis/mysql/*Mapper.xml</value>
		</property>
	</bean>
    
    <!-- mysql数据源的sqlSessionTemplate配置 -->
    <bean id="sqlSessionTemplateMysql"  class="org.mybatis.spring.SqlSessionTemplate">  
          <constructor-arg index="0" ref="sqlSessionFactory_mysql" />  
    </bean>
    
    <!-- 配置MyBatis Mapper接口，自动扫描并通过动态代理实现接口 -->
    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.fruit.dao"></property>
    	<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateMysql"></property>
    </bean> -->
    
    <!-- UserUserMapper配置接口自动实现动态代理 -->
    <!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
	  <property name="mapperInterface" value="com.fruit.dao.UserUserMapper" />
	  <property name="sqlSessionFactory" ref="sqlSessionFactory_mysql" />
	</bean> -->
	
	
	<!-- mysql数据源的sqlSessionFactory配置 -->
    <bean id="sqlSessionFactory_emall" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_fruit_emall" />
		<property name="configLocation">
		    <value>classpath:mybatis/sqlmap-config.xml</value>		
		</property>
		<property name="mapperLocations"> 
			<value>classpath:mybatis/mysql/*Mapper.xml</value>
		</property>
	</bean>
    
    <!-- mysql数据源的sqlSessionTemplate配置 -->
    <bean id="sqlSessionTemplateEmall"  class="org.mybatis.spring.SqlSessionTemplate">  
          <constructor-arg index="0" ref="sqlSessionFactory_emall" />  
    </bean>

    <!-- ###############################MySQL数据源的相关orm框架配置 End################################################# -->
    
    
    
    <!-- ###############################ORACLE数据源的相关orm框架配置 Start################################################# -->
    
    <!-- mysql数据源的sqlSessionFactory配置 -->
    <bean id="sqlSessionFactory_oracle" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_fruit_oracle" />
		<property name="configLocation">
		    <value>classpath:mybatis/sqlmap-config.xml</value>		
		</property>
		<property name="mapperLocations"> 
			<value>classpath:mybatis/oracle/*Mapper.xml</value>
		</property>
	</bean>
    
    <!-- mysql数据源的sqlSessionTemplate配置 -->
    <bean id="sqlSessionTemplateOracle"  class="org.mybatis.spring.SqlSessionTemplate">  
          <constructor-arg index="0" ref="sqlSessionFactory_oracle" />  
    </bean>
    
    <!-- 配置MyBatis Mapper接口，自动扫描并通过动态代理实现接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.fruit.dao"></property>
    	<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateOracle"></property>
    </bean>
    
    <!-- UserUserMapper配置接口自动实现动态代理 -->
    <!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
	  <property name="mapperInterface" value="com.fruit.dao.UserUserMapper" />
	  <property name="sqlSessionFactory" ref="sqlSessionFactory_mysql" />
	</bean> -->

    <!-- ###############################MySQL数据源的相关orm框架配置 End################################################# -->

</beans>